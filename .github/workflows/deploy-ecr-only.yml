name: Push image to ECR

on:
  workflow_call:
    inputs:
      service:
        description: "ECR repository name (usually same as service)"
        required: true
        type: string
      image_tag:
        description: "Image tag (default: commit SHA)"
        required: false
        default: ${{ github.sha }}
        type: string
    secrets:
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_ACCESS_KEY_SECRET:
        required: true

jobs:
  push:
    runs-on: ubuntu-latest
    env:
      AWS_REGION: ap-southeast-1
      ECR_REPOSITORY: ${{ inputs.service }}
      IMAGE_TAG: ${{ inputs.image_tag }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id:     ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_ACCESS_KEY_SECRET }}
          aws-region:            ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Ensure ECR repository exists
        run: |
          aws ecr describe-repositories --repository-names "$ECR_REPOSITORY" >/dev/null 2>&1 || \
          aws ecr create-repository --repository-name "$ECR_REPOSITORY" >/dev/null

      - name: Build, tag, and push image
        run: |
          REGISTRY=${{ steps.login-ecr.outputs.registry }}
          IMAGE_URI="$REGISTRY/$ECR_REPOSITORY"
          echo "Pushing to: $IMAGE_URI"

          docker build -t "$IMAGE_URI:${{ env.IMAGE_TAG }}" -t "$IMAGE_URI:latest" .
          docker push "$IMAGE_URI:${{ env.IMAGE_TAG }}"
          docker push "$IMAGE_URI:latest"
